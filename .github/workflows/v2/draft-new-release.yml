name: "Create new release"

on:
  workflow_call:

jobs:
  draft-new-release:
    name: "Draft a new release"
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: install release-it
        run: npm i -g release-it @release-it/bumper

      - name: get next version
        id: version
        run: |
          version=$(release-it --release-version --ci ${{ github.event.inputs.type }})
          echo "::set-output name=version::$version"

      - name: Create release branch
        run: git checkout -b release/${{ steps.version.outputs.version }}

      # In order to make a commit, we need to initialize a user.
      # You may choose to write something less generic here if you want, it doesn't matter functionality wise.
      - name: Initialize mandatory git config
        run: |
          git config user.name "GitHub actions"
          git config user.email noreply@github.com

      - name: Bump version in composer.json
        run: release-it ${{ github.event.inputs.type }} --ci

      - name: Push new branch
        run: git push origin release/${{ steps.version.outputs.version }}

      - name: Create pull request
        uses: thomaseizinger/create-pull-request@1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          head: release/${{ steps.version.outputs.version }}
          base: main
          title: Release version ${{ steps.version.outputs.version }}
          reviewers: ${{ github.actor }} # By default, we request a review from the person who triggered the workflow.
          # Write a nice message to the user.
          # We are claiming things here based on the `publish-new-release.yml` workflow.
          # You should obviously adopt it to say the truth depending on your release workflow :)
          body: |
            Hi @${{ github.actor }}!

            This PR was created in response to a manual trigger of the release workflow here: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}.

            Merging this PR will create a GitHub release and upload any assets that are created as part of the release build.
